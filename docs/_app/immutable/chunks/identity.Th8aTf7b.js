function d(t,e){return t==null||e==null?NaN:e<t?-1:e>t?1:e>=t?0:NaN}class f extends Map{constructor(e,n=o){if(super(),Object.defineProperties(this,{_intern:{value:new Map},_key:{value:n}}),e!=null)for(const[s,c]of e)this.set(s,c)}get(e){return super.get(r(this,e))}has(e){return super.has(r(this,e))}set(e,n){return super.set(u(this,e),n)}delete(e){return super.delete(i(this,e))}}class a extends Set{constructor(e,n=o){if(super(),Object.defineProperties(this,{_intern:{value:new Map},_key:{value:n}}),e!=null)for(const s of e)this.add(s)}has(e){return super.has(r(this,e))}add(e){return super.add(u(this,e))}delete(e){return super.delete(i(this,e))}}function r({_intern:t,_key:e},n){const s=e(n);return t.has(s)?t.get(s):n}function u({_intern:t,_key:e},n){const s=e(n);return t.has(s)?t.get(s):(t.set(s,n),n)}function i({_intern:t,_key:e},n){const s=e(n);return t.has(s)&&(n=t.get(s),t.delete(s)),n}function o(t){return t!==null&&typeof t=="object"?t.valueOf():t}function h(t){return t}export{f as I,a,d,h as i};
